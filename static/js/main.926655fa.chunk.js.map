{"version":3,"sources":["redux/Contacts/contacts-actions.js","components/Form/ContactForm/ContactForm.js","components/Form/Filter/Filter.js","components/Form/ContactList/ContactList.js","App.js","redux/Contacts/contacts-reducer.js","redux/Contacts/store.js","index.js"],"names":["addContacts","createAction","name","number","payload","id","shortid","generate","deleteContacts","changeFilter","ContactForm","state","nameInputId","numberInputId","findInput","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","map","includes","alert","onSubmit","reset","className","this","htmlFor","type","pattern","title","required","onChange","Component","connect","items","dispatch","contactsActions","filter","onChangeFilter","target","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","onDeleteContact","onClick","App","createReducer","contact","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"qVAkBe,GAAEA,YAfGC,YAAa,gBAAgB,SAACC,EAAMC,GACpD,MAAO,CACHC,QAAS,CACLC,GAAIC,IAAQC,WACZL,KAAMA,EACNC,OAAQA,OAUUK,eALPP,YAAa,mBAKUQ,aAHzBR,YAAa,0B,eCH5BS,E,4MACFC,MAAQ,CACJT,KAAM,GACNC,OAAQ,I,EAGZS,YAAcN,IAAQC,W,EACtBM,cAAgBP,IAAQC,W,EACxBO,UAAYR,IAAQC,W,EAEpBQ,aAAe,SAAAC,GAAM,IAAD,EACQA,EAAEC,cAAlBf,EADQ,EACRA,KAAMgB,EADE,EACFA,MACd,EAAKC,SAAL,eAAiBjB,EAAOgB,K,EAI5BE,aAAe,SAACJ,GACZA,EAAEK,iBACE,EAAKC,MAAMC,SAASC,KAAI,qBAAGtB,QAAiBuB,SAAS,EAAKd,MAAMT,MAChEwB,MAAM,GAAD,OAAI,EAAKf,MAAMT,KAAf,6BAGT,EAAKoB,MAAMK,SACP,EAAKhB,MAAMT,KACX,EAAKS,MAAMR,QAEf,EAAKyB,U,EAGTA,MAAQ,WACJ,EAAKT,SAAS,CAAEjB,KAAM,GAAIC,OAAQ,M,4CAGtC,WACI,OACI,mCACI,uBAAM0B,UAAU,aAAaF,SAAUG,KAAKV,aAA5C,UACI,uBAAOS,UAAU,mBAAmBE,QAASD,KAAKlB,YAAlD,kBACA,uBACA,uBACIiB,UAAU,mBACVG,KAAK,OACLd,MAAOY,KAAKnB,MAAMT,KAClBA,KAAK,OACL+B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUN,KAAKf,aACfV,GAAIyB,KAAKlB,cAEb,uBACA,uBAAOiB,UAAU,mBAAmBE,QAASD,KAAKjB,cAAlD,oBACA,uBACA,uBACIgB,UAAU,mBACVG,KAAK,OACLd,MAAOY,KAAKnB,MAAMR,OAClBD,KAAK,SACL+B,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUN,KAAKf,aACfV,GAAIyB,KAAKjB,gBAEb,uBACA,wBAAQgB,UAAU,oBAAoBG,KAAK,SAA3C,kC,GAjEMK,aAqFXC,eARS,SAAA3B,GACpB,MAAO,CAAEY,SAAUZ,EAAMY,SAASgB,UAGX,SAAAC,GAAQ,MAAK,CACpCb,SAAU,SAACzB,EAAMC,GAAP,OAAkBqC,EAASC,EAAgBzC,YAAYE,EAAMC,QAG5DmC,CAA6C5B,GChE7C4B,G,MAAAA,aARS,SAAA3B,GAAK,MAAK,CAC9BO,MAAOP,EAAMY,SAASmB,WAGC,SAAAF,GAAQ,MAAK,CACpCG,eAAgB,SAAC3B,GAAD,OAAOwB,EAASC,EAAgBhC,aAAaO,EAAE4B,OAAO1B,YAG3DoB,EA5BA,SAAC,GAA+B,IAA7BpB,EAA4B,EAA5BA,MAAOyB,EAAqB,EAArBA,eACrB,OACI,gCACI,mBAAGd,UAAU,cAAb,mCACA,uBACA,uBACIA,UAAU,eACVG,KAAK,OACLd,MAAOA,EACPkB,SAAUO,WCcpBE,G,MAAqB,SAACC,EAAaJ,GACrC,IAAMK,EAAmBL,EAAOM,cAEhC,OAAOF,EAAYJ,QAAO,SAACnB,GAAD,OACtBA,EAASrB,KAAK8C,cAAcvB,SAASsB,QAY9BT,eARS,SAAC,GAAD,QAAGf,SAAYgB,EAAf,EAAeA,MAAOG,EAAtB,EAAsBA,OAAtB,MAAsC,CAC1DnB,SAAUsB,EAAmBN,EAAOG,OAGb,SAAAF,GAAQ,MAAK,CACpCS,gBAAiB,SAAC5C,GAAD,OAAQmC,EAASC,EAAgBjC,eAAeH,QAGtDiC,EAvCK,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAU0B,EAAb,EAAaA,gBAAb,OAChB,qBAAIpB,UAAU,WAAd,cAA2BN,EAASC,KAAI,gBAAGnB,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACpC,qBAAI0B,UAAU,gBAAd,UACI,oBAAGA,UAAU,gBAAb,UAA8B3B,EAA9B,KAAsCC,KACtC,wBACI0B,UAAU,kBACVG,KAAK,SACLkB,QAAS,kBAAMD,EAAgB5C,IAHnC,sBAF+BA,YCiB5B8C,G,kKAfb,WAEE,OACE,qCACE,oBAAItB,UAAU,QAAd,uBACA,cAAC,EAAD,IACA,oBAAIA,UAAU,QAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAVUQ,c,gECHZE,EAAQa,YAAc,IAAD,mBACtBX,EAAgBzC,aAAc,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OAD3C,cAEtBqC,EAAgBjC,gBAAiB,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,OAC9BO,EAAM+B,QAAO,SAAAW,GAAO,OAAIA,EAAQhD,KAAOD,QAHpB,IAOrBsC,EAASU,YAAc,GAAD,eACvBX,EAAgBhC,cAAe,SAAC6C,EAAD,YAAMlD,YAG3BmD,cAAgB,CAAEhB,QAAOG,WCAlCc,EAAwB,CAC1BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGVC,EAAU,sBACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,IACbC,IACAC,IACAC,IACAC,IACAC,SARA,CAWZC,MAEEC,EAAQC,YAAe,CACzBC,QAAS,CACLlD,SAAUmD,YAAelB,EAAuBmB,IAEpDf,aACAgB,UAAUC,IAMC,GAAEN,QAAOO,UAHNC,YAAaR,I,MClC/BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWP,EAAMO,UAA7C,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.926655fa.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContacts = createAction('contacts/add', (name, number) => {\r\n    return {\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name: name,\r\n            number: number\r\n        }\r\n    }\r\n})\r\n\r\nconst deleteContacts = createAction('contacts/delete')\r\n\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\n// eslint-disable-next-line\r\nexport default { addContacts, deleteContacts, changeFilter }","import { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../../redux/Contacts/contacts-actions'\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from 'shortid';\r\nimport './ContactForm.css';\r\n// import initialContacts from '../../../contacts.json';\r\n\r\n// const initialState = {\r\n//     contacts: initialContacts,\r\n// }\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n    findInput = shortid.generate();\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.contacts.map(({ name }) => name).includes(this.state.name)) {\r\n            alert(`${this.state.name} is already in contacts`)\r\n            return\r\n        }\r\n        this.props.onSubmit(\r\n            this.state.name,\r\n            this.state.number,\r\n        )\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form className=\"TaskEditor\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"TaskEditor_label\" htmlFor={this.nameInputId}>Name</label>\r\n                    <br />\r\n                    <input\r\n                        className=\"TaskEditor_input\"\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                    />\r\n                    <br />\r\n                    <label className=\"TaskEditor_label\" htmlFor={this.numberInputId}>Number</label>\r\n                    <br />\r\n                    <input\r\n                        className=\"TaskEditor_input\"\r\n                        type=\"text\"\r\n                        value={this.state.number}\r\n                        name=\"number\"\r\n                        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                    />\r\n                    <br />\r\n                    <button className=\"TaskEditor_button\" type=\"submit\">Add contact</button>\r\n                </form>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { contacts: state.contacts.items };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(contactsActions.addContacts(name, number))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../../redux/Contacts/contacts-actions'\r\nimport './Filter.css'\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"Filter_text\">Find contacts by name</p>\r\n            <br />\r\n            <input\r\n                className=\"Filter_input\"\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChangeFilter}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../../redux/Contacts/contacts-actions'\r\nimport './ContactList.css'\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className=\"TaskList\"> {contacts.map(({ id, name, number }) => (\r\n        <li className=\"TaskList_item\" key={id}>\r\n            <p className=\"TaskList_text\">{name}: {number}</p>\r\n            <button\r\n                className=\"TaskList_button\"\r\n                type=\"button\"\r\n                onClick={() => onDeleteContact(id)}\r\n            >Delete</button>\r\n        </li>\r\n    ))}\r\n    </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    })),\r\n}\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n\r\n    return allContacts.filter((contacts) =>\r\n        contacts.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n    contacts: getVisibleContacts(items, filter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: (id) => dispatch(contactsActions.deleteContacts(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import React, { Component } from 'react';\r\nimport ContactForm from './components/Form/ContactForm/ContactForm';\r\nimport Filter from './components/Form/Filter/Filter';\r\nimport ContactList from './components/Form/ContactList/ContactList';\r\nimport './App.css'\r\n// import initialContacts from './contacts.json';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"Title\">Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className=\"Title\">Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\"\r\nimport contactsActions from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [contactsActions.addContacts]: (state, { payload }) => [...state, payload],\r\n    [contactsActions.deleteContacts]: (state, { payload }) =>\r\n        state.filter(contact => contact.id !== payload)\r\n\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.changeFilter]: (_, { payload }) => payload\r\n})\r\n\r\nexport default combineReducers({ items, filter })","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport contactsReducer from './contacts-reducer'\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter']\r\n}\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH,\r\n                REHYDRATE,\r\n                PAUSE,\r\n                PERSIST,\r\n                PURGE,\r\n                REGISTER,]\r\n        }\r\n    }),\r\n    logger]\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer)\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store from './redux/Contacts/store'\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}